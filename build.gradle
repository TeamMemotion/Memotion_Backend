plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.hanium'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}


// 빌드 시 plain jar 생성하지 않도록 설정
jar {
	enabled = false
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// GPT
	implementation 'com.theokanning.openai-gpt3-java:service:0.12.0'

	// Gson 라이브러리로1 Json 파싱
	implementation 'org.jsoup:jsoup:1.14.2'
	implementation 'com.google.code.gson:gson:2.8.7'

    // Model mapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//swagger
	//implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	//implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	buildscript {
		ext {
			queryDslVersion = "5.0.0"
		}
	}
	//querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

}


// 단위 테스트 작성되지 않았는데 빌드 되면서 에러 발생 -> 주석 처리
//tasks.named('test') {
//	useJUnitPlatform()
//}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

